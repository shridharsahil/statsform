<?php

function statsform_menu() {
  $items = array();
  
  $items['statsform/form'] = array(
    'title' => 'Stats Form',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('statsform_form'),
    'access callback' => TRUE,
    'description' => 'For statsform use',
  );
  $items['statsform/references'] = array(
    'title' => 'Stats Form',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('statsform_references'),
    'access callback' => TRUE,
    'description' => 'For statsform use',
  );
  $items['statsform/mockup'] = array(
    'title' => 'Stats Form',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('statsform_mockup'),
    'access callback' => TRUE,
    'description' => 'For statsform use',
  );
 
 
  return $items;
}

function statsform_form($form, &$form_state) {
  
 
  $form['test'] = array(
        '#type' => 'item',
        '#markup' => '
        
<html>
    <head>
        <title>Stats Redesign Project</title>

        <!-- JQuery -->
        <script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.1.1.min.js"></script>

        <!-- Semantic UI -->
        <link rel="stylesheet" type="text/css" href="../semantic/semantic.min.css">
        <script src="../semantic/semantic.min.js"></script>

        <!-- Personally Defined CSS/Javascript -->
        <link rel="stylesheet" type="text/css" href="../css/stylesheet.css">
        <script src="../js/javascript.js"></script>


        <!-- Google Font Montserrat --> 

        <link href="https://fonts.googleapis.com/css?family=Montserrat" rel="stylesheet">   


    </head>
    <body>

        <!-- Menu -->
        <div class="ui secondary inverted menu">
            <div class="ui huge breadcrumb">
                <div class="active section" >
                    <a class="item">
                        Home
                    </a>
                </div>
            </div>
            <div class="right menu">
                <a class="item">
                    Login
                </a>
            </div>
        </div>

        <!-- Content -->
        <div class="ui equal width height center aligned grid">
         <div class="row">
          <a class="six wide column" href="references" id="YRL"> <div class="verticalalign"> YOUNG RESEARCH LIBRARY</div></a>
          <div class="four wide column">
            <img class ="img-responsive" src="../img/Statsform_Stock_Photos/powellnight.jpg">
        </div>
        <a class="six wide column" href="references" id="BL"> <div class="verticalalign"> BIOMEDICAL LIBRARY </div> </a>
    </div>

    <div class="row">
        <div class="four wide column"> <div align="left">
           <img class ="img-responsive" src="../img/Statsform_Stock_Photos/powellstudent.jpg"></div>
       </div>
       <a class="seven wide column" href="references" id = "POWELL"> <div class="verticalalign">POWELL LIBRARY</div></a> 
       <div class="five wide column">
        <img class ="img-responsive" src="../img/Statsform_Stock_Photos/clicc.jpg"></div>
    </div>


    <div class="row">
        <div class="four wide column">
            <img class ="img-responsive" src="../img/Statsform_Stock_Photos/books.jpg">
        </div>
        <a class="four wide column" href="references" id="AL"><div class="verticalalign"> ARTS LIBRARY</div></a>
        <div class="four wide column">
            <img class ="img-responsive" src="../img/Statsform_Stock_Photos/DAY3_SHOT5_YOUNGLIBRARY-2192_r_cmyk.jpg">
        </div>
        <a class="four wide column" href="references" id="ML"><div class="verticalalign">MUSIC LIBRARY</div></a>
    </div>
</div>    
</body>
</html>
        
        ',
    );
  return $form;
}

function statsform_references($form, &$form_state) {
  
 
  $form['test'] = array(
        '#type' => 'item',
        '#markup' => '
        
<html>
<head>
    <title>Stats Redesign Project</title>

    <!-- Semantic UI -->
    <link rel="stylesheet" type="text/css" href="../assets/includes/semantic.min.css">
    <script type="text/javascript" src="../assets/includes/semantic.min.js"></script>

    <!-- JQuery -->
    <script type="text/javascript" src="../assets/includes/jquery.min.js"></script>

    <!-- Customization -->
    <link rel="stylesheet" type="text/css" href="../css/stylesheet.css" />
    <!-- IScroll Link here -->
    <script type="text/javascript" src="../css/stylesheet.css"></script>
</head>
<body>

    <!-- Menu -->
    <div class="ui secondary inverted menu">
        <div class="ui huge breadcrumb">
            <div class="section" >
                <a class="item" href="index.html">
                    Home
                </a>
            </div>
            <i class="right chevron icon divider"></i>
            <div class="active section">
                <a class="item">
                    Specific Library
                </a>
            </div>
        </div>
        <div class="right menu">
            <a class="item">
                Login
            </a>
        </div>
    </div>

    <!-- Content -->


    <div class="ui equal width center aligned grid">

<div class = "eight wide column" id="sec1"  >
 <a href = "mockup" > 
    <div class="containerBox">
    <div class="text-box">
        <h4>TAP</h4>
    </div>
    <img src="../img/Statsform_Stock_Photos/powellnight.jpg"/>
</div>
</a>
</div>

        <a href = "mockup-options/accordion.html"class="eight wide column" id="sec2"> <div class="verticalalign">ACCORDION</div></a>
        <a href = "mockup-options/swipe_v2.html"class="eight wide column" id="sec3"><div class="verticalalign">SWIPE</div></a>
        <a href = "mockup-options/tabular.html"class="eight wide column" id="sec4"><div class="verticalalign">TABULAR</div></a>
        <a href = "mockup.html"class="eight wide column" id="sec5"><div class="verticalalign">ORIGINAL</div></a>
        <a href = "mockup.html" class="eight wide column" id="sec6"><div class="verticalalign">OTHER  </div></a>
    </div>    


<!-- <div class="containerBox">
    <div class="text-box">
        <h4>Your Text is responsive and centered</h4>
    </div>
    <img class="img-responsive" src="http://placehold.it/900x100"/>
</div>
 
 ** Attempted to create hyperlink photo with text on top. 3/1
!-->

</body>
</html>
        
        ',
    );
  return $form;
}

function statsform_mockup($form, &$form_state) {
  
 
  $form['test'] = array(
        '#type' => 'item',
        '#markup' => '
        
<html>

<body>

    <!-- Menu -->
    <div class="ui secondary inverted menu">
        <div class="ui huge breadcrumb">
            <div class="section" >
                <a class="item" href="index.html">
                    Home
                </a>
            </div>
            <i class="right chevron icon divider"></i>
            <div class="active section">
                <a class="item">
                    Specific Library
                </a>
            </div>
        </div>
        <div class="right menu">
            <a class="item">
                Login
            </a>
        </div>
    </div>


</body>
</html>
        
        ',
    );
  return $form;
}



/**
 * Returns the form for the second page of form_example_tutorial_8().
 *
 * @ingroup form_example
 */
function statsform_form_page_two($form, &$form_state) {
  $form['description'] = array(
    '#type' => 'item',
    '#title' => t('A basic multistep form (page 2)'),
  );

  $form['color'] = array(
    '#type' => 'textfield',
    '#title' => t('Favorite color'),
    '#required' => TRUE,
    '#default_value' => !empty($form_state['values']['color']) ? $form_state['values']['color'] : '',
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
    '#submit' => array('statsform_form_page_two_submit'),
  );
  $form['back'] = array(
    '#type' => 'submit',
    '#value' => t('<< Back'),
    '#submit' => array('statsform_form_page_two_back'),
    // We won't bother validating the required 'color' field, since they
    // have to come back to this page to submit anyway.
    '#limit_validation_errors' => array(),
  );
  return $form;
}


/**
 * Validate handler for the next button on first page.
 *
 * @ingroup form_example
 */
function statsform_form_next_validate($form, &$form_state) {
  $year_of_birth = $form_state['values']['year_of_birth'];
  if ($year_of_birth && ($year_of_birth < 1900 || $year_of_birth > 2000)) {
    form_set_error('year_of_birth', t('Enter a year between 1900 and 2000.'));
  }
}

/**
 * Submit handler for form_example_tutorial_8() next button.
 *
 * Capture the values from page one and store them away so they can be used
 * at final submit time.
 *
 * @ingroup form_example
 */
function statsform_form_next_submit($form, &$form_state) {

  // Values are saved for each page.
  // to carry forward to subsequent pages in the form.
  // and we tell FAPI to rebuild the form.
  $form_state['page_values'][1] = $form_state['values'];

  if (!empty($form_state['page_values'][2])) {
    $form_state['values'] = $form_state['page_values'][2];
  }

  // When form rebuilds, it will look at this to figure which page to build.
  $form_state['page_num'] = 2;
  $form_state['rebuild'] = TRUE;
}

/**
 * Back button handler submit handler.
 *
 * Since #limit_validation_errors = array() is set, values from page 2
 * will be discarded. We load the page 1 values instead.
 *
 * @ingroup form_example
 */
function statsform_form_page_two_back($form, &$form_state) {
  $form_state['values'] = $form_state['page_values'][1];
  $form_state['page_num'] = 1;
  $form_state['rebuild'] = TRUE;
}

/**
 * The page 2 submit handler.
 *
 * This is the final submit handler. Gather all the data together and output
 * it in a drupal_set_message().
 *
 * @ingroup form_example
 */
function statsform_form_page_two_submit($form, &$form_state) {
  // Normally, some code would go here to alter the database with the data
  // collected from the form. Instead sets a message with drupal_set_message()
  // to validate that the code worked.
  $page_one_values = $form_state['page_values'][1];
  drupal_set_message(t('The form has been submitted. name="@first @last", year of birth=@year_of_birth',
    array(
      '@first' => $page_one_values['first'],
      '@last' => $page_one_values['last'],
      '@year_of_birth' => $page_one_values['year_of_birth'],
    )
  ));

  if (!empty($page_one_values['first2'])) {
    drupal_set_message(t('Second name: name="@first @last", year of birth=@year_of_birth',
      array(
        '@first' => $page_one_values['first2'],
        '@last' => $page_one_values['last2'],
        '@year_of_birth' => $page_one_values['year_of_birth2'],
      )
    ));
  }
  drupal_set_message(t('And the favorite color is @color', array('@color' => $form_state['values']['color'])));

  // If we wanted to redirect on submission, set $form_state['redirect']. For
  // simple redirects, the value can be a string of the path to redirect to. For
  // example, to redirect to /node, one would specify the following:
  //
  // $form_state['redirect'] = 'node';
  //
  // For more complex redirects, this value can be set to an array of options to
  // pass to drupal_goto(). For example, to redirect to /foo?bar=1#baz, one
  // would specify the following:
  //
  // @code
  // $form_state['redirect'] = array(
  //   'foo',
  //   array(
  //     'query' => array('bar' => 1),
  //     'fragment' => 'baz',
  //   ),
  // );
  // @endcode
  //
  // The first element in the array is the path to redirect to, and the second
  // element in the array is the array of options. For more information on the
  // available options, see http://api.drupal.org/url.
}